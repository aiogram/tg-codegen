from .base import TelegramObject, UNSET
from .input_file import (
    BufferedInputFile
    FSInputFile
)
{%- for group in groups %}
    {%- for child in group.childs %}
        {%- if child.is_type %}
from .{{child.pythonic_name}} import {{ child.name }}
        {%- endif %}
    {%- endfor %}
{%- endfor %}

__all__ = (
    "TelegramObject",
    "UNSET",
    "BufferedInputFile",
    "FSInputFile",
{%- for group in groups %}
    {%- for child in group.childs %}
        {%- if child.is_type %}
    "{{ child.name }}",
        {%- endif %}
    {%- endfor %}
{%- endfor %}
)

# Load typing forward refs for every TelegramObject
for _entity_name in __all__:
    _entity = globals()[_entity_name]
    if not hasattr(_entity, 'update_forward_refs'):
        continue
    _entity.update_forward_refs(**globals())

del _entity
del _entity_name

